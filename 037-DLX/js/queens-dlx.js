// Generated by CoffeeScript 2.4.1
// Queens DLX
var ENCODE, encode, execute, range;

range = function(b) {
  return (function() {
    var results = [];
    for (var k = 0; 0 <= b ? k < b : k > b; 0 <= b ? k++ : k--){ results.push(k); }
    return results;
  }).apply(this);
};

ENCODE = function(i) {
  return "ABCDEFGHIJKLMNOPQRSTUVWXYZ"[i];
};

encode = function(i) {
  return "abcdefghijklmnopqrstuvwxyz"[i];
};

execute = function(n = '8') {
  var ax, bx, cx, i, j, k, key, l, len, len1, options, ref, ref1, result, rx;
  n = parseInt(n);
  result = {};
  result.header = `This data produced by queens-dlx ${n}`;
  cx = (function() {
    var k, len, ref, results;
    ref = range(n);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      results.push(`C${ENCODE(i)}`);
    }
    return results;
  })();
  rx = (function() {
    var k, len, ref, results;
    ref = range(n);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      j = ref[k];
      results.push(`R${j + 1}`);
    }
    return results;
  })();
  result.primaries = (cx.concat(rx)).join(' ');
  ax = (function() {
    var k, len, ref, results;
    ref = range(n + n - 1);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      results.push(`A${ENCODE(i)}`);
    }
    return results;
  })();
  bx = (function() {
    var k, len, ref, results;
    ref = range(n + n - 1);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      results.push(`B${ENCODE(i)}`);
    }
    return results;
  })();
  result.secondaries = (ax.concat(bx)).join(' ');
  options = [];
  ref = range(n);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    ref1 = range(n);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      key = `${encode(i)}${j + 1}`;
      options.push(`${key} C${ENCODE(i)} R${j + 1} A${ENCODE(i + j)} B${ENCODE(n - 1 - i + j)}`);
    }
  }
  result.options = options;
  console.log(result);
  return result;
};

module.exports = {execute};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlZW5zLWRseC5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxxdWVlbnMtZGx4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQSxJQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUEsT0FBQSxFQUFBOztBQUVBLEtBQUEsR0FBUSxRQUFBLENBQUMsQ0FBRCxDQUFBO1NBQU87Ozs7O0FBQVA7O0FBQ1IsTUFBQSxHQUFTLFFBQUEsQ0FBQyxDQUFELENBQUE7U0FBTyw0QkFBNkIsQ0FBQSxDQUFBO0FBQXBDOztBQUNULE1BQUEsR0FBUyxRQUFBLENBQUMsQ0FBRCxDQUFBO1NBQU8sNEJBQTZCLENBQUEsQ0FBQTtBQUFwQzs7QUFFVCxPQUFBLEdBQVUsUUFBQSxDQUFDLElBQUUsR0FBSCxDQUFBO0FBQ1QsTUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsT0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBO0VBQUEsQ0FBQSxHQUFJLFFBQUEsQ0FBUyxDQUFUO0VBQ0osTUFBQSxHQUFTLENBQUE7RUFDVCxNQUFNLENBQUMsTUFBUCxHQUFnQixDQUFBLGlDQUFBLENBQUEsQ0FBb0MsQ0FBcEMsQ0FBQTtFQUVoQixFQUFBOztBQUFxQjtBQUFBO0lBQUEsS0FBQSxxQ0FBQTs7bUJBQWYsQ0FBQSxDQUFBLENBQUEsQ0FBSSxNQUFBLENBQU8sQ0FBUCxDQUFKLENBQUE7SUFBZSxDQUFBOzs7RUFDckIsRUFBQTs7QUFBZ0I7QUFBQTtJQUFBLEtBQUEscUNBQUE7O21CQUFWLENBQUEsQ0FBQSxDQUFBLENBQUksQ0FBQSxHQUFFLENBQU4sQ0FBQTtJQUFVLENBQUE7OztFQUNoQixNQUFNLENBQUMsU0FBUCxHQUFtQixDQUFDLEVBQUUsQ0FBQyxNQUFILENBQVUsRUFBVixDQUFELENBQWMsQ0FBQyxJQUFmLENBQW9CLEdBQXBCO0VBRW5CLEVBQUE7O0FBQXFCO0FBQUE7SUFBQSxLQUFBLHFDQUFBOzttQkFBZixDQUFBLENBQUEsQ0FBQSxDQUFJLE1BQUEsQ0FBTyxDQUFQLENBQUosQ0FBQTtJQUFlLENBQUE7OztFQUNyQixFQUFBOztBQUFxQjtBQUFBO0lBQUEsS0FBQSxxQ0FBQTs7bUJBQWYsQ0FBQSxDQUFBLENBQUEsQ0FBSSxNQUFBLENBQU8sQ0FBUCxDQUFKLENBQUE7SUFBZSxDQUFBOzs7RUFDckIsTUFBTSxDQUFDLFdBQVAsR0FBcUIsQ0FBQyxFQUFFLENBQUMsTUFBSCxDQUFVLEVBQVYsQ0FBRCxDQUFjLENBQUMsSUFBZixDQUFvQixHQUFwQjtFQUVyQixPQUFBLEdBQVU7QUFDVjtFQUFBLEtBQUEscUNBQUE7O0FBQ0M7SUFBQSxLQUFBLHdDQUFBOztNQUNDLEdBQUEsR0FBTSxDQUFBLENBQUEsQ0FBRyxNQUFBLENBQU8sQ0FBUCxDQUFILENBQUEsQ0FBQSxDQUFlLENBQUEsR0FBRSxDQUFqQixDQUFBO01BQ04sT0FBTyxDQUFDLElBQVIsQ0FBYSxDQUFBLENBQUEsQ0FBRyxHQUFILENBQU8sRUFBUCxDQUFBLENBQVcsTUFBQSxDQUFPLENBQVAsQ0FBWCxDQUFvQixFQUFwQixDQUFBLENBQXdCLENBQUEsR0FBRSxDQUExQixDQUE0QixFQUE1QixDQUFBLENBQWdDLE1BQUEsQ0FBTyxDQUFBLEdBQUUsQ0FBVCxDQUFoQyxDQUEyQyxFQUEzQyxDQUFBLENBQStDLE1BQUEsQ0FBTyxDQUFBLEdBQUUsQ0FBRixHQUFJLENBQUosR0FBTSxDQUFiLENBQS9DLENBQUEsQ0FBYjtJQUZEO0VBREQ7RUFJQSxNQUFNLENBQUMsT0FBUCxHQUFpQjtFQUNqQixPQUFPLENBQUMsR0FBUixDQUFZLE1BQVo7U0FDQTtBQXBCUzs7QUFzQlYsTUFBTSxDQUFDLE9BQVAsR0FBaUIsQ0FBQyxPQUFEIiwic291cmNlc0NvbnRlbnQiOlsiIyBRdWVlbnMgRExYXHJcblxyXG5yYW5nZSA9IChiKSAtPiBbMC4uLmJdXHJcbkVOQ09ERSA9IChpKSAtPlx0XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWlwiW2ldXHJcbmVuY29kZSA9IChpKSAtPlx0XCJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5elwiW2ldXHJcblxyXG5leGVjdXRlID0gKG49JzgnKSAtPlxyXG5cdG4gPSBwYXJzZUludCBuXHJcblx0cmVzdWx0ID0ge31cclxuXHRyZXN1bHQuaGVhZGVyID0gXCJUaGlzIGRhdGEgcHJvZHVjZWQgYnkgcXVlZW5zLWRseCAje259XCJcclxuXHJcblx0Y3ggPSAoXCJDI3tFTkNPREUgaX1cIiBmb3IgaSBpbiByYW5nZSBuKVxyXG5cdHJ4ID0gKFwiUiN7aisxfVwiIGZvciBqIGluIHJhbmdlIG4pXHJcblx0cmVzdWx0LnByaW1hcmllcyA9IChjeC5jb25jYXQgcngpLmpvaW4gJyAnXHJcblx0XHJcblx0YXggPSAoXCJBI3tFTkNPREUgaX1cIiBmb3IgaSBpbiByYW5nZSBuK24tMSlcclxuXHRieCA9IChcIkIje0VOQ09ERSBpfVwiIGZvciBpIGluIHJhbmdlIG4rbi0xKVxyXG5cdHJlc3VsdC5zZWNvbmRhcmllcyA9IChheC5jb25jYXQgYngpLmpvaW4gJyAnXHJcblxyXG5cdG9wdGlvbnMgPSBbXVxyXG5cdGZvciBpIGluIHJhbmdlIG5cclxuXHRcdGZvciBqIGluIHJhbmdlIG5cclxuXHRcdFx0a2V5ID0gXCIje2VuY29kZShpKX0je2orMX1cIlxyXG5cdFx0XHRvcHRpb25zLnB1c2ggXCIje2tleX0gQyN7RU5DT0RFIGl9IFIje2orMX0gQSN7RU5DT0RFIGkran0gQiN7RU5DT0RFIG4tMS1pK2p9XCJcclxuXHRyZXN1bHQub3B0aW9ucyA9IG9wdGlvbnNcclxuXHRjb25zb2xlLmxvZyByZXN1bHRcclxuXHRyZXN1bHRcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge2V4ZWN1dGV9XHJcbiJdfQ==
//# sourceURL=c:\github\2020\037-DLX\coffee\queens-dlx.coffee