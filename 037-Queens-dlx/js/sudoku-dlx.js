// Generated by CoffeeScript 2.4.1
var boxIndex, colf, execute, range, rowf;

range = function(b) {
  return (function() {
    var results = [];
    for (var l = 0; 0 <= b ? l < b : l > b; 0 <= b ? l++ : l--){ results.push(l); }
    return results;
  }).apply(this);
};

boxIndex = function(j, k) {
  return Math.floor(j / 3) * 3 + Math.floor(k / 3);
};

rowf = function(i) {
  return Math.floor(i / 9);
};

colf = function(i) {
  return i % 9;
};

execute = function(s) {
  var box, c, col, d, i, j, k, l, len, len1, len2, len3, len4, len5, m, n, o, p, pos, q, ref, ref1, ref2, ref3, ref4, ref5, results, row, x;
  pos = Array(81).fill(0);
  row = Array(81).fill(0);
  col = Array(81).fill(0);
  box = Array(81).fill(0);
  c = 0;
  ref = range(81);
  for (l = 0, len = ref.length; l < len; l++) {
    j = ref[l];
    k = j % 9;
    d = s[j] - '1';
    if (d === -1) {
      continue;
    }
    x = boxIndex(rowf(j), k);
    pos[k + 9 * rowf(j)] = 1 + d;
    row[d + 9 * rowf(j)] = 1 + k;
    col[d + 9 * k] = 1 + colf(j);
    box[d + 9 * x] = 1 + colf(j);
    c++;
  }
  console.log(`| ${c} clues`);
  console.log("| " + s);
  s = '';
  ref1 = range(81);
  for (m = 0, len1 = ref1.length; m < len1; m++) {
    i = ref1[m];
    if (!pos[i]) {
      s += `p${rowf(i)}${colf(i)} `;
    }
  }
  ref2 = range(81);
  for (n = 0, len2 = ref2.length; n < len2; n++) {
    i = ref2[n];
    if (!row[i]) {
      s += `r${rowf(i)}${1 + colf(i)} `;
    }
  }
  ref3 = range(81);
  for (o = 0, len3 = ref3.length; o < len3; o++) {
    i = ref3[o];
    if (!col[i]) {
      s += `c${rowf(i)}${1 + colf(i)} `;
    }
  }
  ref4 = range(81);
  for (p = 0, len4 = ref4.length; p < len4; p++) {
    i = ref4[p];
    if (!box[i]) {
      s += `b${rowf(i)}${1 + colf(i)} `;
    }
  }
  console.log(s);
  ref5 = range(9);
  results = [];
  for (q = 0, len5 = ref5.length; q < len5; q++) {
    j = ref5[q];
    results.push((function() {
      var len6, r, ref6, results1;
      ref6 = range(9);
      results1 = [];
      for (r = 0, len6 = ref6.length; r < len6; r++) {
        k = ref6[r];
        x = boxIndex(j, k);
        results1.push((function() {
          var len7, ref7, results2, t;
          ref7 = range(9);
          results2 = [];
          for (t = 0, len7 = ref7.length; t < len7; t++) {
            d = ref7[t];
            if (pos[9 * j + k] + row[9 * j + d] + col[9 * k + d] + box[9 * x + d] === 0) {
              results2.push(console.log(`p${j}${k} r${j}${d + 1} c${k}${d + 1} b${x}${d + 1}`));
            } else {
              results2.push(void 0);
            }
          }
          return results2;
        })());
      }
      return results1;
    })());
  }
  return results;
};

if (process.argv.length === 3) {
  execute(process.argv[2]);
} else {
  execute('010005060004900070000003008070006300030009020006048090300500000090004500060200080');
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Vkb2t1LWRseC5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxzdWRva3UtZGx4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxRQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsRUFBQSxLQUFBLEVBQUE7O0FBQUEsS0FBQSxHQUFRLFFBQUEsQ0FBQyxDQUFELENBQUE7U0FBTzs7Ozs7QUFBUDs7QUFDUixRQUFBLEdBQVcsUUFBQSxDQUFDLENBQUQsRUFBRyxDQUFILENBQUE7U0FBUyxJQUFJLENBQUMsS0FBTCxDQUFXLENBQUEsR0FBRSxDQUFiLENBQUEsR0FBa0IsQ0FBbEIsR0FBc0IsSUFBSSxDQUFDLEtBQUwsQ0FBVyxDQUFBLEdBQUUsQ0FBYjtBQUEvQjs7QUFDWCxJQUFBLEdBQU8sUUFBQSxDQUFDLENBQUQsQ0FBQTtTQUFPLElBQUksQ0FBQyxLQUFMLENBQVcsQ0FBQSxHQUFFLENBQWI7QUFBUDs7QUFDUCxJQUFBLEdBQU8sUUFBQSxDQUFDLENBQUQsQ0FBQTtTQUFPLENBQUEsR0FBRTtBQUFUOztBQUVQLE9BQUEsR0FBVSxRQUFBLENBQUMsQ0FBRCxDQUFBO0FBQ1QsTUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsRUFBQSxHQUFBLEVBQUE7RUFBQSxHQUFBLEdBQU0sS0FBQSxDQUFNLEVBQU4sQ0FBUyxDQUFDLElBQVYsQ0FBZSxDQUFmO0VBQ04sR0FBQSxHQUFN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QSxDQUFBLEdBQUUsQ0FBRixHQUFJLENBQUosQ0FBM0MsS0FBcUQsQ0FBeEQ7NEJBQ0MsT0FBTyxDQUFDLEdBQVIsQ0FBWSxDQUFBLENBQUEsQ0FBQSxDQUFJLENBQUosQ0FBQSxDQUFBLENBQVEsQ0FBUixDQUFVLEVBQVYsQ0FBQSxDQUFjLENBQWQsQ0FBQSxDQUFBLENBQWtCLENBQUEsR0FBRSxDQUFwQixDQUFzQixFQUF0QixDQUFBLENBQTBCLENBQTFCLENBQUEsQ0FBQSxDQUE4QixDQUFBLEdBQUUsQ0FBaEMsQ0FBa0MsRUFBbEMsQ0FBQSxDQUFzQyxDQUF0QyxDQUFBLENBQUEsQ0FBMEMsQ0FBQSxHQUFFLENBQTVDLENBQUEsQ0FBWixHQUREO2FBQUEsTUFBQTtvQ0FBQTs7VUFERCxDQUFBOzs7TUFGRCxDQUFBOzs7RUFERCxDQUFBOztBQWpDUzs7QUF3Q1YsSUFBRyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQWIsS0FBdUIsQ0FBMUI7RUFDQyxPQUFBLENBQVEsT0FBTyxDQUFDLElBQUssQ0FBQSxDQUFBLENBQXJCLEVBREQ7Q0FBQSxNQUFBO0VBR0MsT0FBQSxDQUFRLG1GQUFSLEVBSEQiLCJzb3VyY2VzQ29udGVudCI6WyJyYW5nZSA9IChiKSAtPiBbMC4uLmJdIFxyXG5ib3hJbmRleCA9IChqLGspIC0+IE1hdGguZmxvb3Ioai8zKSAqIDMgKyBNYXRoLmZsb29yKGsvMykgXHJcbnJvd2YgPSAoaSkgLT4gTWF0aC5mbG9vciBpLzlcclxuY29sZiA9IChpKSAtPiBpJTlcclxuXHJcbmV4ZWN1dGUgPSAocykgLT5cclxuXHRwb3MgPSBBcnJheSg4MSkuZmlsbCAwXHJcblx0cm93ID0gQXJyYXkoODEpLmZpbGwgMFxyXG5cdGNvbCA9IEFycmF5KDgxKS5maWxsIDBcclxuXHRib3ggPSBBcnJheSg4MSkuZmlsbCAwXHJcblx0YyA9IDBcclxuXHJcblx0Zm9yIGogaW4gcmFuZ2UgODFcclxuXHRcdGsgPSBqICUgOVxyXG5cdFx0ZCA9IHNbal0gLSAnMSdcclxuXHRcdGlmIGQgPT0gLTEgdGhlbiBjb250aW51ZVxyXG5cdFx0eCA9IGJveEluZGV4IHJvd2Yoaiksa1xyXG5cclxuXHRcdHBvc1trICsgOSpyb3dmIGpdID0gMSArIGRcclxuXHRcdHJvd1tkICsgOSpyb3dmIGpdID0gMSArIGtcclxuXHRcdGNvbFtkICsgOSprXSA9IDEgKyBjb2xmIGpcclxuXHRcdGJveFtkICsgOSp4XSA9IDEgKyBjb2xmIGpcclxuXHJcblx0XHRjKytcclxuXHRjb25zb2xlLmxvZyBcInwgI3tjfSBjbHVlc1wiXHJcblx0Y29uc29sZS5sb2cgXCJ8IFwiICsgc1xyXG5cclxuXHRzID0gJydcclxuXHRmb3IgaSBpbiByYW5nZSA4MVxyXG5cdFx0aWYgIXBvc1tpXSB0aGVuIHMgKz0gXCJwI3tyb3dmIGl9I3tjb2xmIGl9IFwiXHJcblx0Zm9yIGkgaW4gcmFuZ2UgODFcclxuXHRcdGlmICFyb3dbaV0gdGhlbiBzICs9IFwiciN7cm93ZiBpfSN7MSArIGNvbGYgaX0gXCJcclxuXHRmb3IgaSBpbiByYW5nZSA4MVxyXG5cdFx0aWYgIWNvbFtpXSB0aGVuIHMgKz0gXCJjI3tyb3dmIGl9I3sxICsgY29sZiBpfSBcIlxyXG5cdGZvciBpIGluIHJhbmdlIDgxXHJcblx0XHRpZiAhYm94W2ldIHRoZW4gcyArPSBcImIje3Jvd2YgaX0jezEgKyBjb2xmIGl9IFwiXHJcblx0Y29uc29sZS5sb2cgc1xyXG5cclxuXHRmb3IgaiBpbiByYW5nZSA5XHJcblx0XHRmb3IgayBpbiByYW5nZSA5XHJcblx0XHRcdHggPSBib3hJbmRleCBqLGtcclxuXHRcdFx0Zm9yIGQgaW4gcmFuZ2UgOVxyXG5cdFx0XHRcdGlmIHBvc1s5Kmora10gKyByb3dbOSpqK2RdICsgY29sWzkqaytkXSArIGJveFs5KngrZF0gPT0gMFxyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2cgXCJwI3tqfSN7a30gciN7an0je2QrMX0gYyN7a30je2QrMX0gYiN7eH0je2QrMX1cIlxyXG5cclxuaWYgcHJvY2Vzcy5hcmd2Lmxlbmd0aCA9PSAzXHJcblx0ZXhlY3V0ZSBwcm9jZXNzLmFyZ3ZbMl1cclxuZWxzZVxyXG5cdGV4ZWN1dGUgJzAxMDAwNTA2MDAwNDkwMDA3MDAwMDAwMzAwODA3MDAwNjMwMDAzMDAwOTAyMDAwNjA0ODA5MDMwMDUwMDAwMDA5MDAwNDUwMDA2MDIwMDA4MCdcclxuIl19
//# sourceURL=c:\github\2020\037-Queens-dlx\coffee\sudoku-dlx.coffee